trigger:
- master

resources:
- repo: self

pool: Default

stages:
- stage: Build
  displayName: Build Stage
  jobs: 
  - job: BuildImage
    displayName: Build Docker Image
    steps:
    
    # Step 1: Docker build
    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        command: build
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: glad2os/group-project
        Dockerfile: ./backend/Dockerfile
        tags: |
          $(Build.BuildId)
          latest

    # SonarQube analysis
    - task: SonarQubePrepare@4
      inputs:
        SonarQube: $(SonarQubeServiceConnectionName)
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: $(SonarProjectKey)
        cliSources: 'backend'

    # Execute SonarQube analysis
    - task: SonarQubeAnalyze@4

    - task: SonarQubePublish@4
      inputs:
        pollingTimeoutSec: '300'

- stage: Deliver
  displayName: 'Deliver Stage'
  dependsOn: Build
  condition: succeeded('Build')
  jobs:
  - job: CleanupAndDeploy
    displayName: 'Cleanup and Deploy'
    pool: Default
    steps:
    - script: |
        echo "Removing images with numeric tags..."
        docker images --format "{{.Repository}}:{{.Tag}}" | grep 'glad2os/group-project:[0-9]*$' | xargs -r docker rmi -f
        
        echo "Stopping existing container..."
        docker stop group-project || true
        docker rm group-project || true

        echo "Running new container..."
        docker run -d --name group-project ghcr.io/glad2os/group-project:latest
      displayName: 'Clean, Stop and Run Container'
- stage: DeployDev
  displayName: 'Deploy to Dev Environment'
  dependsOn: Deliver
  condition: succeeded('Deliver')
  jobs:
  - job: Deploy
    displayName: 'Deploy App'
    pool: Default
    steps:
    - script: |
        echo "Mock Deploy to Dev Environment..."
        # Mock deployment script or command
      displayName: 'Mock Deployment to Dev'

- stage: DeployQAT
  displayName: 'Deploy to QAT Environment'
  dependsOn: DeployDev
  condition: succeeded('DeployDev')
  jobs:
  - job: Deploy
    displayName: 'Deploy App'
    pool: Default
    steps:
    - script: |
        echo "Mock Deploy to QAT Environment..."
        # Mock deployment script or command
      displayName: 'Mock Deployment to QAT'

- stage: DeployStaging
  displayName: 'Deploy to Staging Environment'
  dependsOn: DeployQAT
  condition: succeeded('DeployQAT')
  jobs:
  - job: Deploy
    displayName: 'Deploy App'
    pool: Default
    steps:
    - script: |
        echo "Mock Deploy to Staging Environment..."
        # Mock deployment script or command
      displayName: 'Mock Deployment to Staging'

- stage: DeployProd
  displayName: 'Deploy to Production Environment'
  dependsOn: DeployStaging
  condition: succeeded('DeployStaging')
  jobs:
  - job: Deploy
    displayName: 'Deploy App'
    pool: Default
    steps:
    - script: |
        echo "Mock Deploy to Production Environment..."
        # Mock deployment script or command
      displayName: 'Mock Deployment to Prod'